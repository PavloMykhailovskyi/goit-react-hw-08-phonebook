{"version":3,"file":"static/js/299.2035929d.chunk.js","mappings":"uQAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,E,SCGnBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXf,GAAWgB,EAAAA,EAAAA,IAAYlB,GAEvBmB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MAEF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,OAEL,EAkBD,OACE,SAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAD9D,UAGE,kBAAMC,SApBW,SAAAR,GAMnB,GALAA,EAAES,iBAEuB3B,EAAS4B,MAChC,SAAAC,GAAO,OAAIA,EAAQnB,KAAKoB,gBAAkBpB,EAAKoB,aAAxC,IAGP,OAAOC,MAAM,GAAD,OAAIrB,EAAJ,6BAGd,IAAMsB,EAAO,CAAEtB,KAAAA,EAAME,OAAAA,GACrBE,GAASmB,EAAAA,EAAAA,IAAWD,IACpBrB,EAAQ,IACRE,EAAU,GACX,EAMG,WACE,UAACqB,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,KAAK,OACL9B,KAAK,OACL+B,QAAQ,yHACRC,MAAM,yIACNtB,MAAOV,EACPiC,UAAQ,EACRC,SAAU3B,EACV4B,WAAS,EACTC,MAAM,YAGV,SAACZ,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,KAAK,MACL9B,KAAK,SACLU,MAAOR,EACP6B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRE,WAAS,EACTC,MAAM,SACNF,SAAU3B,UAIhB,SAAC8B,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,YAAYH,WAAS,EAACvB,GAAI,CAAE2B,GAAI,GAA9D,6BAMP,E,UC9EYC,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIzC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACtC,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAO2C,EAAP,KAAeC,EAAf,KACA,GAAgC5C,EAAAA,EAAAA,UAAS,IAAzC,eAAO6C,EAAP,KAAiBC,EAAjB,KACA,GAAoC9C,EAAAA,EAAAA,UAAS,IAA7C,eAAO+C,EAAP,KAAmBC,EAAnB,KACM3C,GAAWC,EAAAA,EAAAA,MAIX2C,EAAa,SAAC,GAA0B,IAAxBP,EAAuB,EAAvBA,GAAIzC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC9ByC,GAAWD,GACXG,EAAY7C,GACZ+C,EAAc7C,GACVwC,GACFtC,GACE6C,EAAAA,EAAAA,IAAY,CAAER,GAAAA,EAAInB,KAAM,CAAEtB,KAAM4C,EAAU1C,OAAQ4C,KAGvD,EAEKvC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACN,IAAK,OACH6C,EAAYnC,GACZ,MAEF,IAAK,SACHqC,EAAcrC,GACd,MAEF,QACE,OAEL,EAED,OACE,SAACC,EAAA,EAAD,CACEuC,UAAU,KAEVtC,GAAI,CAAEC,QAAS,OAAQE,WAAY,SAAUoC,GAAI,GAHnD,SAKGT,GACC,UAAC/B,EAAA,EAAD,CAAKuC,UAAU,OAAOtC,GAAI,CAAEC,QAAS,QAArC,WACE,SAACgB,EAAA,EAAD,CACES,QAAQ,WACR1B,GAAI,CAAEwC,GAAI,GACVC,KAAK,QACLvB,KAAK,OACL9B,KAAK,OACLU,MAAOkC,EACPV,SAAU3B,IACT,KACH,SAACsB,EAAA,EAAD,CACES,QAAQ,WACRe,KAAK,QACLzC,GAAI,CAAEwC,GAAI,GACVtB,KAAK,MACL9B,KAAK,SACLU,MAAOoC,EACPZ,SAAU3B,KAEZ,SAAC8B,EAAA,EAAD,CACEP,KAAK,SACLwB,QAAS,kBAAMN,EAAW,CAAEP,GAAAA,EAAIzC,KAAAA,EAAME,OAAAA,GAA7B,EAFX,sBAQF,iCACE,UAACS,EAAA,EAAD,CAAKC,GAAI,CAAEC,QAAS,OAAQ0C,SAAU,GAAtC,WACE,UAACC,EAAA,EAAD,CAAYN,UAAU,IAAItC,GAAI,CAACwC,GAAI,GAAnC,UAAwCpD,EAAxC,SACA,SAACwD,EAAA,EAAD,CAAYN,UAAU,IAAtB,SAA2BhD,QAE7B,iCACE,SAACmC,EAAA,EAAD,CACEP,KAAK,SACLwB,QAAS,kBAAMN,EAAW,CAAEP,GAAAA,EAAIzC,KAAAA,EAAME,OAAAA,GAA7B,EAFX,mBAMA,SAACmC,EAAA,EAAD,CAAQzB,GAAI,CAAC6C,MAAO,OAAQ3B,KAAK,SAASwB,QA3E/B,kBAAMlD,GAASsD,EAAAA,EAAAA,IAAcjB,GAA7B,EA2EX,2BA3CDA,EAmDV,EC9FD,EAAgC,mCCKnBkB,EAAc,WACzB,IAAMrE,GAAWgB,EAAAA,EAAAA,IAAYlB,GACvBK,GAASa,EAAAA,EAAAA,IAAYd,GAQ3B,OACE,eAAIoE,UAAWC,EAAf,SANOvE,EAASG,QAAO,SAAA0B,GAAO,OAC5BA,EAAQnB,KAAKoB,cAAc0C,SAASrE,EAAO2B,cADf,IAOR2C,KAAI,gBAAGtB,EAAH,EAAGA,GAAIzC,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACtB,SAACsC,EAAD,CAAsBxC,KAAMA,EAAME,OAAQA,EAAQuC,GAAIA,GAApCA,EADI,KAK7B,E,UClBYuB,EAAS,WACpB,IAAMvE,GAASa,EAAAA,EAAAA,IAAYd,GACrBY,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACM,EAAA,EAAD,WACE,SAACkB,EAAA,EAAD,CACES,QAAQ,WACRF,MAAM,wBACN1B,MAAOjB,EACPyC,SAVe,SAAA1B,GACnBJ,GAAS6D,EAAAA,EAAAA,GAAazD,EAAEC,OAAOC,OAChC,KAaF,E,oBCvBD,EAA4B,4BAA5B,EAAgE,wBCUjD,SAASwD,IACpB,IAAM9D,GAAWC,EAAAA,EAAAA,MACXV,GAAYW,EAAAA,EAAAA,IAAYZ,GACxBG,GAAQS,EAAAA,EAAAA,IAAYV,GAM1B,OAJAuE,EAAAA,EAAAA,YAAU,WACN/D,GAASgE,EAAAA,EAAAA,MACZ,GAAE,CAAChE,KAGF,iBAAKwD,UAAWC,EAAhB,WACE,SAACQ,EAAA,EAAD,WACE,2CAEF,eAAIT,UAAWC,EAAf,wBACA,SAAC/D,EAAD,KACA,eAAI8D,UAAWC,EAAf,uBACA,SAACG,EAAD,IACCrE,IAAcE,IAAS,SAACyE,EAAA,EAAD,KACxB,SAACX,EAAD,MAGP,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { Box, Button, Grid, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const checkContactName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkContactName) {\n      return alert(`${name} is already in contacts!`);\n    }\n\n    const data = { name, number };\n    dispatch(addContact(data));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n    >\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={name}\n              required\n              onChange={handleChange}\n              fullWidth\n              label=\"Name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              fullWidth\n              label=\"Number\"\n              onChange={handleChange}\n            />\n          </Grid>\n        </Grid>\n        <Button type=\"submit\" variant=\"contained\" fullWidth sx={{ mt: 4 }}>\n          Add contact\n        </Button>\n      </form>\n    </Box>\n  );\n};\n","import { Box, Button, TextField, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [editName, setEditName] = useState('');\n  const [editNumber, setEditNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  const handleEdit = ({ id, name, number }) => {\n    setIsEdit(!isEdit);\n    setEditName(name);\n    setEditNumber(number);\n    if (isEdit) {\n      dispatch(\n        editContact({ id, data: { name: editName, number: editNumber } })\n      );\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setEditName(value);\n        break;\n\n      case 'number':\n        setEditNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      component=\"li\"\n      key={id}\n      sx={{ display: 'flex', alignItems: 'center', mb: 2 }}\n    >\n      {isEdit ? (\n        <Box component=\"form\" sx={{ display: 'flex' }}>\n          <TextField\n            variant=\"standard\"\n            sx={{ mr: 1 }}\n            size=\"small\"\n            type=\"text\"\n            name=\"name\"\n            value={editName}\n            onChange={handleChange}\n          />{' '}\n          <TextField\n            variant=\"standard\"\n            size=\"small\"\n            sx={{ mr: 1 }}\n            type=\"tel\"\n            name=\"number\"\n            value={editNumber}\n            onChange={handleChange}\n          />\n          <Button\n            type=\"button\"\n            onClick={() => handleEdit({ id, name, number })}\n          >\n            Save\n          </Button>\n        </Box>\n      ) : (\n        <>\n          <Box sx={{ display: 'flex', flexGrow: 1}}>\n            <Typography component=\"p\" sx={{mr: 3}}>{name} :</Typography>\n            <Typography component=\"p\">{number}</Typography>\n          </Box>\n          <>\n            <Button\n              type=\"button\"\n              onClick={() => handleEdit({ id, name, number })}\n            >\n              Edit\n            </Button>\n            <Button sx={{color: 'red'}} type=\"button\" onClick={handleDelete}>\n              Delete\n            </Button>\n          </>\n        </>\n      )}\n    </Box>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__2jNwc\"};","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <ul className={css.contact__list}>\n      {filteredContacts().map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  user: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\n// console.log();\n","import { Box, TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <Box>\n      <TextField\n        variant='standard'\n        label=\"Find contacts by name\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </Box>\n\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"title\":\"Contacts_title__LxdN4\"};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport Loader from \"components/Loader\";\nimport { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n      <div className={css.container}>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <Loader />}\n        <ContactList />\n      </div>\n    );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","Box","sx","display","flexDirection","alignItems","onSubmit","preventDefault","find","contact","toLowerCase","alert","data","addContact","Grid","container","spacing","item","xs","TextField","type","pattern","title","required","onChange","fullWidth","label","Button","variant","mt","ContactItem","id","isEdit","setIsEdit","editName","setEditName","editNumber","setEditNumber","handleEdit","editContact","component","mb","mr","size","onClick","flexGrow","Typography","color","deleteContact","ContactList","className","css","includes","map","Filter","changeFilter","Contacts","useEffect","fetchContacts","Helmet","Loader"],"sourceRoot":""}